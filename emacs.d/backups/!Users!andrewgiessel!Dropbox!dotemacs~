;; By default we starting in text mode.
(setq initial-major-mode
      (lambda ()
        (text-mode)
        (turn-on-auto-fill)
        (font-lock-mode)
        ))

(setq inhibit-startup-message t)

(setq transient-mark-mode t)

(setq backup-directory-alist '(("." . "~/.emacs.d/backups")))

(add-hook 'before-save-hook (lambda () (delete-trailing-whitespace)))


; Some new Colors for Font-lock.
(setq font-lock-mode-maximum-decoration t)
(require 'font-lock)
(setq font-lock-use-default-fonts nil)
;(setq font-lock-use-default-colors nil)
(copy-face 'default 'font-lock-string-face)
;(set-face-background 'region "sienna")
(set-face-foreground 'font-lock-constant-face "pink")
(set-face-foreground 'font-lock-string-face "lemonchiffon")
(copy-face 'italic 'font-lock-comment-face)
(set-face-foreground 'font-lock-comment-face "red")
;(copy-face 'bold 'font-lock-function-name-face)
(set-face-foreground 'font-lock-function-name-face "lightblue")
(copy-face 'default 'font-lock-keyword-face)
(set-face-foreground 'font-lock-keyword-face "mediumPurple")
(copy-face 'default 'font-lock-type-face)
(set-face-foreground 'font-lock-type-face "yellow")
(set-face-foreground 'font-lock-variable-name-face "Orange")
;(copy-face 'bold 'font-lock-builtin-face)
(set-face-foreground 'font-lock-builtin-face "ghostwhite")

(set-face-foreground 'bold-italic "Blue")

(setq default-frame-alist
      '(
        (cursor-color . "red")
        (cursor-type . box)
        (foreground-color . "green")
        (background-color . "black")))

;; By default turn on colorization.
(if (fboundp 'global-font-lock-mode)
    (global-font-lock-mode t)
  )

;; enable xdvi tex viewing
(setq tex-dvi-view-command "xdvi")

;; kill alot of annoying things
;;(tool-bar-mode 0)
(tooltip-mode 0)
(blink-cursor-mode 1)
(menu-bar-mode 0)
(column-number-mode 1)
(scroll-bar-mode -1)

;; change scroll behavior to "progressive" instead of "jerky"
(setq-default scroll-up-aggressively 0.0 scroll-down-aggressively 0.0)
(setq scroll-step 1 scroll-conservatively 100000)

;; enable numbered backups & move them all ~/.emacsbackup
(setq version-control t)
(setq backup-directory-alist (list (cons ".*" (expand-file-name "~/.emacsbackup/"))))

(global-set-key "\C-xf" 'fill-paragraph)

(add-to-list 'load-path
             "~/.emacs.d/plugins")
(add-to-list 'load-path
	     "~/.emacs.d/plugins/yasnippet-0.6.1c")
    (require 'yasnippet) ;; not yasnippet-bundle
    (yas/initialize)
    (yas/load-directory "~/.emacs.d/plugins/yasnippet-0.6.1c/snippets")

;; pymacs
(autoload 'pymacs-apply "pymacs")
(autoload 'pymacs-call "pymacs")
(autoload 'pymacs-eval "pymacs" nil t)
(autoload 'pymacs-exec "pymacs" nil t)
(autoload 'pymacs-load "pymacs" nil t)

;;(eval-after-load "pymacs"
;;  '(add-to-list 'pymacs-load-path YOUR-PYMACS-DIRECTORY"))

;; rope (requires pymacs)
(pymacs-load "ropemacs" "rope-")
;;(pymacs-load "ropemacs")

(custom-set-variables
  ;; custom-set-variables was added by Custom -- don't edit or cut/paste it!
  ;; Your init file should contain only one such instance.
 '(ecb-options-version "2.32"))
(custom-set-faces
  ;; custom-set-faces was added by Custom -- don't edit or cut/paste it!
  ;; Your init file should contain only one such instance.
 )
